name: Testing data_faker
# Delete after test
on:
  push:
    branches:
      - main
      - branch-*
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11.3"
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python -
      - name: Install deps
        run: |
          poetry install
      - name: Run black check
        run: |
          poetry run black --check .

  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11.3"
      - run: pip install ruff
      - run: ruff .

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11.3"
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python -
      - name: Install deps
        run: |
          poetry install
      - name: Run mypy check
        run: |
          poetry run mypy .

  pytest:
    runs-on: ubuntu-latest
    services:
      data_faker-db:
        image: postgres:13.8-bullseye
        env:
          POSTGRES_PASSWORD: data_faker
          POSTGRES_USER: data_faker
          POSTGRES_DB: data_faker
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.11.3"
      - name: Install deps
        uses: knowsuchagency/poetry-install@v1
        env:
          POETRY_VIRTUALENVS_CREATE: false
      - name: Run pytest check
        run: poetry run pytest -vv --cov="data_faker" .

        env:
          DATA_FAKER_HOST: "0.0.0.0"
          DATA_FAKER_DB_HOST: localhost

sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: pytest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python -
      - name: Install tox and any other packages
        run: poetry install tox
      - name: Run tox
        run: poetry run tox -e py
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
